!function(i){i(document).ready(function(){i("body").append('<div id="supersized-loader"></div><div id="supersized"></div>')}),i.supersized=function(t){var e="#supersized",s=this;s.$el=i(e),s.el=e,vars=i.supersized.vars,s.$el.data("supersized",s),api=s.$el.data("supersized"),s.init=function(){i.supersized.vars.options=i.extend({},i.supersized.defaultOptions,t),s.options=i.supersized.vars.options,s._build()},s._build=function(){s._start()},s._start=function(){s.options.start_slide?vars.current_slide=s.options.start_slide-1:vars.current_slide=Math.floor(Math.random()*s.options.slides.length);var t=s.options.new_window?' target="_blank"':"";imageLink=api.getField("url")?"href='"+api.getField("url")+"'":"";var e=i('<img src="'+api.getField("image")+'"/>');e.appendTo(s.el).wrap('<a class="image-loading activeslide" '+imageLink+t+"></a>").css("visibility","hidden"),e.load(function(){s._origDim(i(this)),s.resizeNow(),s.launch()}),s.$el.css("visibility","hidden")},s.launch=function(){s.$el.css("visibility","visible"),i("#supersized-loader").hide(),i(window).resize(function(){s.resizeNow()})},s.resizeNow=function(){return s.$el.each(function(){return i("img",s.el).each(function(){function t(i){i?(thisSlide.width()<d||thisSlide.width()<s.options.min_width)&&(thisSlide.width()*n>=s.options.min_height?(thisSlide.width(s.options.min_width),thisSlide.height(thisSlide.width()*n)):e()):s.options.min_height>=o&&!s.options.fit_landscape?d*n>=s.options.min_height||d*n>=s.options.min_height&&n<=1?(thisSlide.width(d),thisSlide.height(d*n)):n>1?(thisSlide.height(s.options.min_height),thisSlide.width(thisSlide.height()/n)):thisSlide.width()<d&&(thisSlide.width(d),thisSlide.height(thisSlide.width()*n)):(thisSlide.width(d),thisSlide.height(d*n))}function e(i){i?thisSlide.height()<o&&(thisSlide.height()/n>=s.options.min_width?(thisSlide.height(s.options.min_height),thisSlide.width(thisSlide.height()/n)):t(!0)):s.options.min_width>=d?o/n>=s.options.min_width||n>1?(thisSlide.height(o),thisSlide.width(o/n)):n<=1&&(thisSlide.width(s.options.min_width),thisSlide.height(thisSlide.width()*n)):(thisSlide.height(o),thisSlide.width(o/n))}thisSlide=i(this);var n=(thisSlide.data("origHeight")/thisSlide.data("origWidth")).toFixed(2),d=s.$el.width(),o=s.$el.height();s.options.fit_always?o/d>n?t():e():o<=s.options.min_height&&d<=s.options.min_width?o/d>n?s.options.fit_landscape&&n<1?t(!0):e(!0):s.options.fit_portrait&&n>=1?e(!0):t(!0):d<=s.options.min_width?o/d>n?s.options.fit_landscape&&n<1?t(!0):e():s.options.fit_portrait&&n>=1?e():t(!0):o<=s.options.min_height?o/d>n?s.options.fit_landscape&&n<1?t():e(!0):s.options.fit_portrait&&n>=1?e(!0):t():o/d>n?s.options.fit_landscape&&n<1?t():e():s.options.fit_portrait&&n>=1?e():t(),thisSlide.parent().hasClass("image-loading")&&i(".image-loading").removeClass("image-loading"),s.options.horizontal_center&&i(this).css("left",(d-i(this).width())/2),s.options.vertical_center&&i(this).css("top",(o-i(this).height())/2)}),s.options.image_protect&&i("img",s.el).bind("contextmenu mousedown",function(){return!1}),!1})},s._origDim=function(i){i.data("origWidth",i.width()).data("origHeight",i.height()).css("visibility","visible")},s.getField=function(i){return s.options.slides[vars.current_slide][i]},s.init()},i.supersized.vars={current_slide:0,options:{}},i.supersized.defaultOptions={start_slide:1,new_window:1,image_protect:1,min_width:0,min_height:0,vertical_center:1,horizontal_center:1,fit_always:0,fit_portrait:1,fit_landscape:0},i.fn.supersized=function(t){return this.each(function(){new i.supersized(t)})}}(jQuery);
//# sourceMappingURL=data:application/json;base64,
